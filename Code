#---------------------------------------------------------------------------
# Recursion/Arrays Summative.py
# Mason Skinner
# March 08, 2022
#---------------------------------------------------------------------------

#----------------------------Imports----------------------------------------
import time
import random
#---------------------------------------------------------------------------

#---------------------------Functions---------------------------------------
def set_stats(player_stats, points): #used too increase players stats
    print(f"""You have {points} stat point(s) remaining.
    Please input the name of the stat you would like to increase.
    Options: health, strength, agility, endurance
    Current stats: Health:{player_stats['health']}, Strength:{player_stats['strength']}, Agility:{player_stats['agility']}, Endurance:{player_stats['endurance']}
    To see the effects of all stats, enter 'help'""")
    stat = input("> ").lower()
    if stat == "help":
        stats_info()
        points = points + 1
    elif stat == "health":
        print("Health increased by 10!\n")
        player_stats['health'] = player_stats['health'] + 10
    elif stat == "strength":
        print("Strength increased by 1!\n")
        player_stats['strength'] = player_stats['strength'] + 1
    elif stat == "agility":
        print("Agility increased by 1!\n")
        player_stats['agility'] = player_stats['agility'] + 1
    elif stat == "endurance":
        print("Endurance increased by 5!\n")
        player_stats['endurance'] = player_stats['endurance'] + 5
    else:
        print("sorry I didn't catch that.\n")
        points = points + 1
    time.sleep(1)
    points = points - 1
    #player_stats = {'health':health, 'strength':strength, 'agility':agility, 'endurance':endurance, 'intelligence':intelligence}
    if points > 0:
        player_stats = set_stats(player_stats, points)
    player_stats['health_max'] = player_stats['health']
    player_stats['endurance_max'] = player_stats['endurance']
    return player_stats

def stats_info(): #used too explain stats
    print("""each stat affects certain aspects of your gameplay.
The Health stat determines your health points(HP) and your health regeneration.
    you start with 100 health, each stat increases it by 10!""")
    time.sleep(2)
    print("""The Strength stat determines how much damage your attacks can do,
    as well as your skill with heavy weapons.""")
    time.sleep(2)
    print("""The Agility stat determines the chance of you hitting your opponent and dodging their attacks,
    it also determines your effectivness with light weapons.""")
    time.sleep(2)
    print("""The Endurance stat determines how much energy you have, and how quickly you regain it,
    you start with 50 energy, and every stat increases it by 5.""")
    time.sleep(2)

def equipment_info(): #explains equipment pros and cons
    print("""There is two classes of armour, Light, and Heavy
    Heavy armour is strong against slashing weapons and weak against blunt weapons.
    Light armour is strong against blunt weapons and weak against slashing weapons.""")
    time.sleep(2)
    print("""Weapons come in two classes, one-handed and two-handed.
    Two-handed weapons are influenced by your strength stat.
    One-handed weapons are influenced by your agility stat.""")
    time.sleep(2)
    print("""All weapons deal a certain type of damage that varies in effectivness.
    Swords and axes deal slashing damage which is effective against light armour.
    Maces and bludgeons deal blunt damage which is effective against heavy armour.
    Spears and pikes deal piercing damage, which is mildly effective against all armour types""")
    
def equipment_select(equipment):#used too equip your character before each fight
    print("Would you like an explanation of how different equipment interacts?")
    choice = input('> ').lower()
    if choice == 'yes' or choice == 'y':
        equipment_info()
    selected = False
    while selected == False:
        print("Do you choose heavy or light armour?")
        choice = input('> ').lower()
        if choice == 'heavy':
            print("Standard issue forged steel, you won't fall to even the mightiest blows!\n")
            equipment['armour'] = heavy
            selected = True
        elif choice == 'light':
            print("Leather, nice and light, you'll run circles around your enemy\n")
            equipment['armour'] = light
            selected = True
        else:
            print("I asked you a question! answer properly!")
    selected = False
    time.sleep(1.5)
    while selected == False:
        print("""What weapon will you wield?
Haliberd:(Two-handed, Slashing)
Short Sword:(One-handed, Slashing)
Warhammer:(Two-handed, Blunt)
Club:(One-handed, Blunt)
Infantry Pike:(Two-handed, Piercing)
Light Spear:(One-handed, Piercing)""")
        choice = input('> ')
        selected = True
        if choice == 'haliberd':
            equipment['damage_type'] = 'slashing'
            equipment['handle_type'] = 'twohanded'
        elif choice == 'short sword':
            equipment['damage_type'] = 'slashing'
            equipment['handle_type'] = 'onehanded'
        elif choice == 'warhammer':
            equipment['damage_type'] = 'blunt'
            equipment['handle_type'] = 'twohanded'
        elif choice == 'club':
            equipment['damage_type'] = 'blunt'
            equipment['handle_type'] = 'onehanded'
        elif choice == 'infantry pike':
            equipment['damage_type'] = 'piercing'
            equipment['handle_type'] = 'twohanded'
        elif choice == 'light spear':
            equipment['damage_type'] = 'piercing'
            equipment['handle_type'] = 'onehanded'
        else:
            selected = False
            print("imaginary weapons won't help you in the arena comrade.")
        print("Excellent choice, may it serve you well.\n")
        time.sleep(2)
    return equipment

def condition(stats, name): #tells the player the enemy and their endurace and health remaining, chance is used to see if AI misses
    if stats['health'] >= stats['health_max'] - (stats['health_max'] / 3):
        print(f"{name} still in good condition, {stats['health']} Health remaining.")
        chance = 0
    elif stats['health'] < (stats['health_max'] / 3):
        print(f"{name} in bad condition, {stats['health']} health remaining.")
        chance = 2
    else:
        print(f"{name} in decent condtion, {stats['health']} health remaining.")
        chance = 1
    if stats['endurance'] > 20:
        print(f"{name} still full of energy, {stats['endurance']} energy left.")
    elif stats['endurance'] < 5:
        print(f"{name} exhausted, can only defend, {stats['endurance']} energy left.")
    else:
        print(f"{name} starting too tire, {stats['endurance']} energy left.")
    return chance

def stumble(chance):#if the AI stumbles it misses its attack
    miss = False
    while chance > 0:
        roll = random.randint(1,4)
        if roll == 1:
            miss = True
        chance = chance - 1
    return miss

def arena_fight(p_stats, o_stats, p_equip, o_equip):#used to cycle through the fight till one fighter dies
    stumble_chance = condition(o_stats, f"{o_stats['name']} is")
    time.sleep(1)
    miss = stumble(stumble_chance)
    if miss == True:
        print(f"{o_stats['name']} misses!\n")
    else:
        ai_attack(o_stats, p_stats, o_equip, p_equip)
    if p_stats['health'] <= 0:
        print("You have died!")
    else:
        condition(p_stats, "You're")
        choice = 0
        choice = choose_attack(p_stats, choice)
        if choice == 1:
            stamina = ((p_stats['endurance_max'] / 5) + random.randint(1,5)) - random.randint(0,5)
            p_stats['endurance'] = p_stats['endurance'] + stamina
            if p_stats['endurance'] > p_stats['endurance_max']:
                p_stats['endurance'] = p_stats['endurance_max']
            print(f"{p_stats['name']} hangs back, catching their breath!")
            print(f"{p_stats['name']} recovers {stamina} points of energy!!")
        elif choice == 2:
            p_stats['endurance'] = p_stats['endurance'] - 5
            stamina = ((p_stats['endurance_max'] / 10) + random.randint(1,5)) - random.randint(0,5)
            p_stats['endurance'] = p_stats['endurance'] + stamina
            if p_stats['endurance'] > p_stats['endurance_max']:
                p_stats['endurance'] = p_stats['endurance_max']
            print(f"{p_stats['name']} makes a reserved swing!")
            o_stats = attack(o_stats, p_stats, p_equip, o_equip, 5)
            print(f"{p_stats['name']} recovers {stamina} points of energy!")
        elif choice == 3:
            p_stats['endurance'] = p_stats['endurance'] - 10
            print(f"{p_stats['name']} attacks!")
            o_stats = attack(o_stats, p_stats, p_equip, o_equip, 10)
        elif choice == 4:
            p_stats['endurance'] = p_stats['endurance'] - 20
            print(f"{p_stats['name']} lunges forward with an aggresive strike!")
            o_stats = attack(o_stats, p_stats, p_equip, o_equip, 20)
        time.sleep(1)
        if o_stats['health'] > 0:
            win = arena_fight(p_stats, o_stats, p_equip, o_equip)
        else:
            print(f"The crowd cheers as {o_stats['name']} falls to the ground with a thud, his body laying lifeless in a pool of his own blood!")
            win = True
        return(win)
        
def ai_attack(ai_stats, p_stats, ai_equip, p_equip):#used too make the ai attack 
    if ai_stats['endurance'] > 20:
        attack_type = random.randint(1, 2)
    elif ai_stats['endurance'] < 5:
        attack_type = 4
    elif ai_stats['endurance'] < 10:
        attack_type = random.randint(3, 4)
    else:
        attack_type = random.randint(2, 4)
    if attack_type == 1:
        ai_stats['endurance'] = ai_stats['endurance'] - 20
        print(f"{ai_stats['name']} lunges forward at you with an aggresive strike!")
        p_stats = attack(p_stats, ai_stats, ai_equip, p_equip, 20)
    elif attack_type == 2:
        ai_stats['endurance'] = ai_stats['endurance'] - 10
        print(f"{ai_stats['name']} attacks you!")
        p_stats = attack(p_stats, ai_stats, ai_equip, p_equip, 10)
    elif attack_type == 3:
        ai_stats['endurance'] = ai_stats['endurance'] - 5
        print(f"{ai_stats['name']} makes a reserved swing at you, conserving his energy!")
        stamina = ((ai_stats['endurance_max'] / 10) + random.randint(1,5)) - random.randint(0,5)
        ai_stats['endurance'] = ai_stats['endurance'] + stamina
        if ai_stats['endurance'] > ai_stats['endurance_max']:
            ai_stats['endurance'] = ai_stats['endurance_max']
        p_stats = attack(p_stats, ai_stats, ai_equip, p_equip, 5)
        print(f"{ai_stats['name']} recovers {stamina} points of energy!!")
    elif attack_type == 4:
        stamina = ((ai_stats['endurance_max'] / 5) + random.randint(1,5)) - random.randint(0,5)
        ai_stats['endurance'] = ai_stats['endurance'] + stamina
        if ai_stats['endurance'] > ai_stats['endurance_max']:
            ai_stats['endurance'] = ai_stats['endurance_max']
        print(f"{ai_stats['name']} hangs back, catching their breath!")
        print(f"{ai_stats['name']} recovers {stamina} points of energy!!")
    return(ai_stats, p_stats)

def choose_attack(stats, choice): #used too make sure the player chooses a valid attack based on remaining endurance
    max = 1
    print("1) Defend (recover energy)")
    if stats['endurance'] >= 5:
        print("2) Light attack (5 energy, gain a small amount of energy at the end of turn)")
        max = max + 1
    if stats['endurance'] >= 10:
        print("3) Standard attack (10 energy)")
        max = max + 1
    if stats['endurance'] >= 20:
        print("4) Heavy attack (20 energy)")
        max = max + 1
    print(' ')
    selected = False
    while selected == False:
        try:
            choice = int(input('> '))
            if choice == 1 or choice == 2 or choice == 3 or choice == 4:
                if choice > max:
                    print("You can't select that!")
                else:
                    selected = True
                    return(choice)
            else:
                print("That's not an option!")
        except ValueError:
            print("please input a numbered choice")
            
def try_crit(crit_attack, attack_stats):#tests too see if you hit a critical attack
    crit = False
    while crit_attack > 0:
        crit_hit = random.randint(1, 2)
        if crit_hit == 1:
            crit = True
        crit_attack = crit_attack - 0.5
    if crit == True:
        crit = 2
        print(f"{attack_stats['name']} lands a critical hit! Double Damage!")
    else:
        crit = 1
    return crit

def attack(defend_stats, attack_stats, attack_equip, defend_equip, energy): #calculates damage and tells the player
    armour = defend_equip['armour']
    dmg_type = attack_equip['damage_type']
    dmg_typemult = armour[dmg_type]
    if attack_equip['handle_type'] == 'twohanded':
        handle_mult = 2.5 * attack_stats['strength'] * 0.25
        crit = try_crit(attack_stats['strength'] / (attack_stats['strength'] / 6), attack_stats) #chance the attack is a critical hit
    elif attack_equip['handle_type'] == 'onehanded':
        handle_mult = 2.5 * attack_stats['agility'] * 0.25 
        crit = try_crit(attack_stats['agility'] / 2, attack_stats) #chance the attack is a critical hit
    damage = (energy / 5) * handle_mult * dmg_typemult * crit
    if damage >= 10:
        print(f"{attack_stats['name']} strikes a mighty blow! {damage} points of health damage!")
    elif damage == 0:
        print(f"{attack_stats['name']}'s blow misses! {damage} points of health damage!")
    elif damage < 5:
        print(f"{attack_stats['name']}'s swing glances off! {damage} points of health damage!")
    else:
        print(f"{attack_stats['name']}'s attack hits its mark! {damage} points of health damage!")
    print(' ')
    time.sleep(1)
    defend_stats['health'] = defend_stats['health'] - damage
    return(defend_stats)

def main(player_stats, player_equipment, stats, equipment, wins):
    opponent_stats = stats.pop(0)
    opponent_equipment = equipment.pop(0)
    print(f"""Today you will be fighting {opponent_stats['name']}.
Most likely he will be wearing {opponent_equipment['armour_type']}.
He is also known too wield a {opponent_equipment['weapon_name']}.\n""")
    time.sleep(2)
    equipment_select(player_equipment)
    win = arena_fight(player_stats, opponent_stats, player_equipment, opponent_equipment)
    if win == True:
        wins = wins + 1
        player_stats['health'] = player_stats['health_max']
        player_stats['endurance'] = player_stats['endurance_max']
        if wins == 5:
            print("Well you have done it prisoner, you won all 5 fights, you have earned your freedom, get out of my sight!")
        else:
            print("Congratulations on your win prisoner, now go to your cell for rest till tommorow!")
            print("You have gained some stats!")
            set_stats(player_stats, random.randint(3, 5))
            main(player_stats, player_equipment, stats, equipment, wins)
    else:
        print("Haha! Looks like the dogs will eat good tonight!")
        
#------------------------------------------------------Variables------------------------------------------------------
heavy = {'slashing':0.5, 'piercing':1, 'blunt':2} 
light = {'slashing':2, 'piercing':1, 'blunt':0.5}
player_stats = {'health':10, 'strength':1, 'agility':1, 'endurance':50, 'health_max':100, 'endurance_max':50}
player_equipment = {}

galen_stats = {'health':100, 'strength':1, 'agility':1, 'endurance':50, 'health_max':100, 'endurance_max':50, 'name':'Galen'}
galen_equipment = {'armour':light, 'damage_type':'slashing', 'handle_type':'onehanded', 'weapon_name':'sword', 'armour_type':'light armour'}
mercer_stats = {'health':150, 'strength':4, 'agility':4, 'endurance':70, 'health_max':150, 'endurance_max':70, 'name':'Mercer'}
mercer_equipment = {'armour':heavy, 'damage_type':'slashing', 'handle_type':'twohanded', 'weapon_name':'haliberd', 'armour_type':'heavy armour'}
crixus_stats = {'health':200, 'strength':7, 'agility':7, 'endurance':85, 'health_max':200, 'endurance_max':85, 'name':'Crixus'}
crixus_equipment = {'armour':heavy, 'damage_type':'piercing', 'handle_type':'onehanded', 'weapon_name':'light spear', 'armour_type':'heavy armour'}
armipotens_stats = {'health':250, 'strength':10, 'agility':10, 'endurance':100, 'health_max':250, 'endurance_max':100, 'name':'Arminpotens'}
armipotens_equipment = {'armour':light, 'damage_type':'blunt', 'handle_type':'twohanded', 'weapon_name':'warhammer', 'armour_type':'light armour'}
ulfric_stats = {'health':500, 'strength':15, 'agility':15, 'endurance':150, 'health_max':500, 'endurance_max':150, 'name':'Ulfric'}
ulfric_equipment = {'armour':heavy, 'damage_type':'piercing', 'handle_type':'twohanded', 'weapon_name':'infantry pike', 'armour_type':'heavy armour'}

stats = [galen_stats, mercer_stats, crixus_stats, armipotens_stats, ulfric_stats]
equipment = [galen_equipment, mercer_equipment, crixus_equipment, armipotens_equipment, ulfric_equipment]
#----------------------------------------------------------------------------------------------------------------------


#----------------------------------------------------Main--------------------------------------------------------------
print("""Wake up prisoner!
It's your lucky day, you've been selected to have a chance at freedom.
Over the next week you will partake in 5 fights.
If you win them all, you'll be set free, pardoned of all crimes.
If you lose, well, your body will be good eating for the dogs!
""")
print("What is your name?")
player_stats['name'] = input('> ')
player_stats = set_stats(player_stats, 10)
print("""Look sharp prisoner!
My name is Roderic, it's my job to ensure your properly equipped for your fights,
the people want a spectacle, not a slaughter.
You better choose some gear fast, your first fight is going too begin within the hour.
""")
main(player_stats, player_equipment, stats, equipment, 0)
